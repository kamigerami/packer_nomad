# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile for bootstrapping a development nomad cluster with
# VirtualBox provider and Ansible provisioner

VAGRANTFILE_API_VERSION = "2"
ANSIBLE_PLAYBOOK = ENV['ANSIBLE_PLAYBOOK'] || "site.yml"
ANSIBLE_VERSION = "2.8.4-1ppa~bionic"
ANSIBLE_NOMAD_DOCKER_ENABLE = ENV['ANSIBLE_NOMAD_DOCKER_ENABLE'] || true
CLUSTER_HOSTS = ENV['CLUSTER_HOSTS'] || "hosts"
BOX_MEM = ENV['BOX_MEM'] || "1536"
BOX_NAME =  ENV['BOX_NAME'] || "ubuntu/bionic64"

# Nomad variables
NOMAD_MASTER_IP = "10.1.42.70"

# Set environment variables on vagrant hosts
$set_environment_variables = <<SCRIPT
tee "/etc/profile.d/myvars.sh" > "/dev/null" <<EOF
# Ansible environment variables.
export ANSIBLE_NOMAD_VERSION=#{ENV['ANSIBLE_NOMAD_VERSION'] || "0.9.5" }
export ANSIBLE_NOMAD_DATACENTER=#{ENV['ANSIBLE_NOMAD_DATACENTER'] || "dc1"}
export ANSIBLE_NOMAD_DOCKER_ENABLE=#{ANSIBLE_NOMAD_DOCKER_ENABLE}
export ANSIBLE_NOMAD_USE_CONSUL=#{ENV['ANSIBLE_NOMAD_USE_CONSUL'] || false }
export ANSIBLE_NOMAD_DISABLE_UPDATE_CHECK=#{ENV['ANSIBLE_NOMAD_DISABLE_UPDATE_CHECK']  || false}
export ANSIBLE_NOMAD_CONSUL_ADDRESS=#{ENV['ANSIBLE_NOMAD_CONSUL_ADDRESS'] || "localhost:8500"}
export ANSIBLE_VERSION=#{ANSIBLE_NOMAD_VERSION}
export NOMAD_MASTER_IP=#{NOMAD_MASTER_IP}

EOF
source /etc/profile.d/myvars.sh
SCRIPT

# Ansible playbook command for installing nomad
$install_nomad = <<-SCRIPT
set -ex

logger() {
  DT=$(date '+%Y/%m/%d %H:%M:%S')
  echo "$DT install_nomad.sh: $1"
}

logger "Install ansible-galaxy role for nomad"

ansible-galaxy install brianshumate.nomad

ansible-playbook -i /vagrant/hosts \
      --connection=local \
      -e nomad_version=${ANSIBLE_NOMAD_VERSION} \
      -e nomad_node_role=${ANSIBLE_NOMAD_NODE_ROLE} \
      -e nomad_datacenter=${ANSIBLE_NOMAD_DATACENTER} \
      -e nomad_docker_enable=${ANSIBLE_NOMAD_DOCKER_ENABLE} \
      -e nomad_use_consul=${ANSIBLE_NOMAD_USE_CONSUL} \
      -e nomad_disable_update_check=${ANSIBLE_NOMAD_DISABLE_UPDATE_CHECK} \
      -e nomad_consul_address=${ANSIBLE_NOMAD_CONSUL_ADDRESS} \
      -e nomad_node_name=${ANSIBLE_NOMAD_NODE_NAME} \
      -e nomad_iface="enp0s8" \
      -e nomad_bind_address="0.0.0.0" \
      -e nomad_retry_join="yes" \
      -e nomad_region="local" \
      --become \
      /vagrant/site.yml
SCRIPT

Vagrant.require_version ">= 2.2.4"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # post up message
  config.trigger.after :up do |message|
    message.run_remote = {inline: "echo All done! http://$NOMAD_MASTER_IP:4646/ui"}
  end

  # Run base provisioning scripts for all 3 nodes
  config.vm.provision "set-env",
    type: "shell",
    preserve_order: true,
    inline: $set_environment_variables

  config.vm.provision "install-base",
    type: "shell",
    preserve_order: true,
    path: "./../scripts/base.sh"

  config.vm.provision "install-ansible",
    type: "shell",
    preserve_order: true,
    path: "./../scripts/ansible.sh",
    args: ANSIBLE_VERSION

  if ANSIBLE_NOMAD_DOCKER_ENABLE
    config.vm.provision "docker",
      type: "docker",
      preserve_order: true
  end

  # Configure 3 nomad nodes
  config.vm.define :nomad1 do |nomad1_config|
    nomad1_config.vm.box = BOX_NAME
    nomad1_config.vm.network :private_network, ip: "10.1.42.70"
    nomad1_config.vm.hostname = "nomad1.local"
    nomad1_config.ssh.forward_agent = true
    nomad1_config.vm.provider "virtualbox" do |v|
      v.name = "nomad-node1"
      v.customize ["modifyvm", :id, "--memory", BOX_MEM]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end

    nomad1_config.vm.provision "shell" do |nomad|
      nomad.inline = $install_nomad
      nomad.env = {"ANSIBLE_NOMAD_NODE_ROLE" => "server"}
    end

    # join cluster
    nomad1_config.vm.provision "shell", inline: "nomad server join ${NOMAD_MASTER_IP}:4648"

  end

  config.vm.define :nomad2 do |nomad2_config|
    nomad2_config.vm.box = BOX_NAME
    nomad2_config.vm.network :private_network, ip: "10.1.42.71"
    nomad2_config.vm.hostname = "nomad2.local"
    nomad2_config.ssh.forward_agent = true
    nomad2_config.vm.provider "virtualbox" do |v|
      v.name = "nomad-node2"
      v.customize ["modifyvm", :id, "--memory", BOX_MEM]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end

    nomad2_config.vm.provision "shell" do |nomad|
      nomad.inline = $install_nomad
      nomad.env   = {"ANSIBLE_NOMAD_NODE_ROLE" => "server"}
    end

    # join cluster
    nomad2_config.vm.provision "shell", inline: "nomad server join ${NOMAD_MASTER_IP}:4648"

  end

  config.vm.define :nomad3 do |nomad3_config|
    nomad3_config.vm.box = BOX_NAME
    nomad3_config.vm.network :private_network, ip: "10.1.42.72"
    nomad3_config.vm.hostname = "nomad3.local"
    nomad3_config.ssh.forward_agent = true
    nomad3_config.vm.provider "virtualbox" do |v|
      v.name = "nomad-node3"
      v.customize ["modifyvm", :id, "--memory", BOX_MEM]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end

    nomad3_config.vm.provision "shell" do |nomad|
      nomad.inline = $install_nomad
      nomad.env   = {"ANSIBLE_NOMAD_NODE_ROLE" => "both"}
    end

    # join cluster
    nomad3_config.vm.provision "shell", inline: "nomad server join ${NOMAD_MASTER_IP}:4648"

  end

end